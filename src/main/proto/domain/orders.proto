package ayizan;
option java_package = "ayizan.domain";
option java_outer_classname = "Orders";

enum Side
{
    BUY = 1;
    SELL = 2;
}

enum TimeInForce
{
    IMMEDIATE_OR_CANCEL = 1;
    FILL_OR_KILL = 2;
    GOOD_TILL_CANCEL = 3;
    GOOD_FOR_DAY = 4;
}

/*
message OrderSpecification
{
    enum Type { LIMIT = 2; MARKET = 3; REPLACE = 4; }

    required Type type = 1;
    optional OrderSpecification limit = 2;
    optional CancelReplaceOrderSpecification cancelReplace = 4;
}
*/

message OrderSpecification
{
    required string id = 1;
    required int32 attributionId = 2;
    required string symbol = 3;

    required Side side = 4;
    optional int64 price = 5;
    required int64 quantity = 6;
    required TimeInForce timeInForce = 7 [ default = GOOD_TILL_CANCEL ];
}

message CancelReplaceOrderSpecification
{
    required string id = 1;
    required int32 attributionId = 2;
    required string symbol = 3;

    required string cancelId = 4;
    required int64 price = 5;
    required int64 quantity = 6;
}

message CancelOrderSpecification
{
    required string id = 1;
    required int32 attributionId = 2;
    required string symbol = 3;

    required string cancelId = 4;
}

message OrderStatusSpecification
{
    required string id = 1;
    required int32 attributionId = 2;
    required string symbol = 3;

    required string statusId = 4;
}

enum RejectReason
{
    NONE = 0;
    ORDERBOOK_CLOSED = 1;
    UNKNOWN_INSTRUMENT = 2;
    UNKNOWN_ORDER = 3;
    INVALID_PRICE = 4;
    NVALID_QUANTITY = 5;
}


message Execution
{
    enum Type { ACCEPT = 2; TRADE = 3; REPLACE = 4; CANCEL = 5; STATUS = 6;  }

    required Type type = 1;
    optional AcceptExecution accept = 2;
    optional TradeExecution trade = 3;
    optional ReplaceExecution replace = 4;
    optional CancelExecution cancel = 5;
    optional StatusExecution status = 6;
}

message AcceptExecution
{
    required int64 timestamp = 1;
    required string id = 2;
    required int32 attributionId = 3;

    required int64 executionId = 4;;
    required OrderState order = 5;

    optional RejectReason rejectReason = 6 [ default = NONE ];
}

message TradeExecution
{
    required int64 timestamp = 1;
    required string id = 2;
    required int32 attributionId = 3;

    required int64 executionId = 4;
    required OrderState order = 5;
    required int64 tradePrice = 6;
    required int64 tradeQuantity = 7;
}

message ReplaceExecution
{
    required int64 timestamp = 1;
    required string id = 2;
    required int32 attributionId = 3;

    optional int64 executionId = 5;
    required string cancelId = 6;
    optional OrderState cancelOrder = 7;
    optional OrderState replaceOrder = 8;

    optional RejectReason rejectReason = 9 [ default = NONE ];
}

message CancelExecution
{
    required int64 timestamp = 1;
    required string id = 2;
    required int32 attributionId = 3;

    optional int64 executionId = 4;
    required string cancelId = 5;
    optional OrderState order = 6;

    optional RejectReason rejectReason = 7 [ default = NONE ];
}

message StatusExecution
{
    required int64 timestamp = 1;
    required string id = 2;
    required int32 attributionId = 3;

    required string statusId = 4;
    required OrderState order = 5;

    optional RejectReason rejectReason = 6 [ default = NONE ];
}

message OrderState
{
    required int64 orderId = 1;
    required string symbol = 2; //TODO: move onto execution
    required Side side = 3;
    optional int64 price = 4;
    required int64 quantity = 5;
    required int64 workingQuantity = 6;
    required int64 filledQuantity = 7;
    required TimeInForce timeInForce = 8;
}
